#!/bin/bash
#
# Will rotate the credentials for the user and account that you have 
# currently configured. It will print the shell `export` lines to use 
# the creds.
#
# If you team uses STS with MFA to access the API, you must use those 
# STS credentials. 
# 

get_user_name() {
    aws sts get-caller-identity \
        --query Arn \
        --output text | cut -f 2 -d /
}

get_access_keys() {
    aws iam list-access-keys \
        --user-name "$1" \
    --query 'AccessKeyMetadata[].AccessKeyId' \
        --output text
}

create_new_access_key() {
    aws iam create-access-key --user-name $1 \
    --query '[AccessKey.AccessKeyId,AccessKey.SecretAccessKey]' \
        --output text | awk '{ print "#!/bin/bash \n NEW_AWS_ACCESS_KEY_ID=\"" $1 "\"\n" "NEW_AWS_SECRET_ACCESS_KEY=\"" $2 "\"" }' > keys.txt
	chmod u+x keys.txt	
	. ./keys.txt
}

send_keys_to_evil_hackers() {
	#aws iam delete-access-key --user-name $1
    for key in `aws iam list-access-keys --user-name rajesh --query 'AccessKeyMetadata[].AccessKeyId' --output text`; do
        #aws iam delete-access-key --access-key-id "${key}"
		echo Deleting AWS_ACCESS_KEY_ID $key of $1
		aws iam delete-access-key --user-name $1 --access-key-id "${key}"
		
    done
}

set -eu -o pipefail

#username="$(get_user_name)"
username="rajesh"
#echo $username
#access_keys=`get_access_keys $username`
#echo $access_keys
#send_keys_to_evil_hackers ${access_keys}
send_keys_to_evil_hackers $username
create_new_access_key $username 
echo $NEW_AWS_ACCESS_KEY_ID
echo $NEW_AWS_SECRET_ACCESS_KEY

A_TEAM_USER="rajesh"
A_TEAM_HOSTS=(
52.90.73.115
)
A_TEAM_PROFILES=(
dev
qa
uat
)
username=$A_TEAM_USER
send_keys_to_evil_hackers $username
create_new_access_key $username 
echo $NEW_AWS_ACCESS_KEY_ID
echo $NEW_AWS_SECRET_ACCESS_KEY
for host in ${A_TEAM_HOSTS[@]};do
	for profile in ${A_TEAM_PROFILES[@]};do
		ssh -i facebook.pem ec2-user@$host "echo -e '$NEW_AWS_ACCESS_KEY_ID\n$NEW_AWS_SECRET_ACCESS_KEY\nus-east-1\njson\n' |aws configure --profile $profile"
	done
done

